/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], address[3], load; 
    OUT out[16];

    PARTS:
    
    DMux8Way16(in=in , sel=address , a=reg1 , b=reg2 , c=reg3 , d=reg4 , e=reg5 , f=reg6 , g=reg7 , h=reg8 );
    DMux8Way(in=load , sel=address , a=load1 , b=load2 , c=load3 , d=load4 , e=load5 , f=load6 , g=load7 , h=load8 );

    Register(in=reg1 , load=load1 , out=outreg1 );
    Register(in=reg2 , load=load2 , out=outreg2 );
    Register(in=reg3 , load=load3 , out=outreg3 );
    Register(in=reg4 , load=load4 , out=outreg4 );
    Register(in=reg5 , load=load5 , out=outreg5 );
    Register(in=reg6 , load=load6 , out=outreg6 );
    Register(in=reg7 , load=load7 , out=outreg7 );
    Register(in=reg8 , load=load8 , out=outreg8 );

    Mux8Way16(a =outreg1 , b =outreg2 , c =outreg3 , d = outreg4, e = outreg5, f = outreg6, g = outreg7, h = outreg8, sel =address , out =out );

}