/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16]; 

    PARTS:
    // load
    Or(a=reset , b=load , out=rsld );
    Or(a=rsld , b=inc , out=inload );

    Add16(a =preout , b[0] =true, b[1..15]=false , out =plus1 );

    Mux16(a=in , b=plus1 , sel=inc , out=inc1 );
    Mux16(a=inc1 , b=in , sel=load , out=ld1 );
    Mux16(a=ld1 , b=false , sel=reset , out=rs1 );

    

    Register(in=rs1 , load=inload , out=preout );
    And16(a=preout , b=true , out=out );
    
}
